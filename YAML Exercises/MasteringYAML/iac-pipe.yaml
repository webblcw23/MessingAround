trigger:
  - none # Set to 'none' to disable auto-triggering

variables:
  terraformFolder: "projectfolder/infra/terraform" # Point to the folder containing your Terraform files

pool:
  vmImage: "ubuntu-latest"

steps:
  - task: UsePythonVersion@0 # Use Python for Azure CLI - may not always be necessary, but useful for some tasks
    inputs:
      versionSpec: "3.x"
    displayName: "Use Python (for az CLI)"

  - script: |
      terraform -version
      terraform init
    workingDirectory: $(terraformFolder)
    displayName: "Terraform Init" # Initialize Terraform

  - script: |
      terraform plan -out=tfplan
    workingDirectory: $(terraformFolder)
    displayName: "Terraform Plan" # Create a Terraform plan to preview changes
  - task: PublishPipelineArtifact@1 # Publish the Terraform plan as a pipeline artifact. This allows you to review the plan before applying it.
    condition: succeeded() # Only publish if the previous steps succeeded
    inputs:
      targetPath: "$(terraformFolder)/tfplan"
      artifactName: "tfplan"
      publishLocation: "pipeline"
    displayName: "Publish Terraform Plan Artifact"

  - task: ManualValidation@0
    inputs:
    instructions: "Review the Terraform plan before applying."
    displayName: "Manual Approval Before Apply"

  - script: |
      terraform apply -auto-approve tfplan
    workingDirectory: $(terraformFolder) # Apply the Terraform plan
    displayName: "Terraform Apply"
